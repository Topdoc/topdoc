{"id":"../node_modules/postcss/lib/declaration.js","dependencies":[{"name":"/Users/garthdb/Topdoc/topdoc/packages/postcss-topdoc/package.json","includedInParent":true,"mtime":1558458643585},{"name":"/Users/garthdb/Topdoc/topdoc/packages/postcss-topdoc/node_modules/postcss/package.json","includedInParent":true,"mtime":1558456105012},{"name":"./node","loc":{"line":6,"column":43},"parent":"/Users/garthdb/Topdoc/topdoc/packages/postcss-topdoc/node_modules/postcss/lib/declaration.js","resolved":"/Users/garthdb/Topdoc/topdoc/packages/postcss-topdoc/node_modules/postcss/lib/node.js"}],"generated":{"js":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _node = _interopRequireDefault(require(\"./node\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n/**\n * Represents a CSS declaration.\n *\n * @extends Node\n *\n * @example\n * const root = postcss.parse('a { color: black }')\n * const decl = root.first.first\n * decl.type       //=> 'decl'\n * decl.toString() //=> ' color: black'\n */\n\n\nvar Declaration =\n/*#__PURE__*/\nfunction (_Node) {\n  _inheritsLoose(Declaration, _Node);\n\n  function Declaration(defaults) {\n    var _this;\n\n    _this = _Node.call(this, defaults) || this;\n    _this.type = 'decl';\n    return _this;\n  }\n  /**\n   * @memberof Declaration#\n   * @member {string} prop The declaration’s property name.\n   *\n   * @example\n   * const root = postcss.parse('a { color: black }')\n   * const decl = root.first.first\n   * decl.prop //=> 'color'\n   */\n\n  /**\n   * @memberof Declaration#\n   * @member {string} value The declaration’s value.\n   *\n   * @example\n   * const root = postcss.parse('a { color: black }')\n   * const decl = root.first.first\n   * decl.value //=> 'black'\n   */\n\n  /**\n   * @memberof Declaration#\n   * @member {boolean} important `true` if the declaration\n   *                             has an !important annotation.\n   *\n   * @example\n   * const root = postcss.parse('a { color: black !important; color: red }')\n   * root.first.first.important //=> true\n   * root.first.last.important  //=> undefined\n   */\n\n  /**\n   * @memberof Declaration#\n   * @member {object} raws Information to generate byte-to-byte equal\n   *                       node string as it was in the origin input.\n   *\n   * Every parser saves its own properties,\n   * but the default CSS parser uses:\n   *\n   * * `before`: the space symbols before the node. It also stores `*`\n   *   and `_` symbols before the declaration (IE hack).\n   * * `between`: the symbols between the property and value\n   *   for declarations.\n   * * `important`: the content of the important statement,\n   *   if it is not just `!important`.\n   *\n   * PostCSS cleans declaration from comments and extra spaces,\n   * but it stores origin content in raws properties.\n   * As such, if you don’t change a declaration’s value,\n   * PostCSS will use the raw value with comments.\n   *\n   * @example\n   * const root = postcss.parse('a {\\n  color:black\\n}')\n   * root.first.first.raws //=> { before: '\\n  ', between: ':' }\n   */\n\n\n  return Declaration;\n}(_node.default);\n\nvar _default = Declaration;\nexports.default = _default;\nmodule.exports = exports.default;"},"sourceMaps":{"js":{"mappings":[{"source":"declaration.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":0}},{"source":"declaration.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":4}},{"source":"declaration.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":9}},{"source":"declaration.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":12}},{"source":"declaration.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":34}},{"source":"declaration.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":35}},{"source":"declaration.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":42}},{"source":"declaration.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":43}},{"source":"declaration.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":51}},{"source":"declaration.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":52}},{"source":"declaration.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":53}},{"source":"declaration.es6","name":null,"original":{"line":3,"column":0},"generated":{"line":19,"column":0}},{"source":"declaration.es6","name":"Declaration","original":{"line":14,"column":6},"generated":{"line":32,"column":4}},{"source":"declaration.es6","name":null,"original":{"line":15,"column":2},"generated":{"line":37,"column":0}},{"source":"declaration.es6","name":null,"original":{"line":15,"column":2},"generated":{"line":37,"column":11}},{"source":"declaration.es6","name":null,"original":{"line":15,"column":2},"generated":{"line":37,"column":22}},{"source":"declaration.es6","name":"defaults","original":{"line":15,"column":15},"generated":{"line":37,"column":23}},{"source":"declaration.es6","name":null,"original":{"line":15,"column":2},"generated":{"line":37,"column":31}},{"source":"declaration.es6","name":null,"original":{"line":15,"column":25},"generated":{"line":37,"column":33}},{"source":"declaration.es6","name":null,"original":{"line":15,"column":25},"generated":{"line":38,"column":0}},{"source":"declaration.es6","name":null,"original":{"line":15,"column":25},"generated":{"line":38,"column":8}},{"source":"declaration.es6","name":null,"original":{"line":15,"column":25},"generated":{"line":38,"column":13}},{"source":"declaration.es6","name":null,"original":{"line":16,"column":4},"generated":{"line":40,"column":0}},{"source":"declaration.es6","name":null,"original":{"line":16,"column":4},"generated":{"line":40,"column":4}},{"source":"declaration.es6","name":null,"original":{"line":16,"column":4},"generated":{"line":40,"column":9}},{"source":"declaration.es6","name":null,"original":{"line":16,"column":4},"generated":{"line":40,"column":12}},{"source":"declaration.es6","name":null,"original":{"line":16,"column":4},"generated":{"line":40,"column":17}},{"source":"declaration.es6","name":null,"original":{"line":16,"column":4},"generated":{"line":40,"column":18}},{"source":"declaration.es6","name":null,"original":{"line":16,"column":4},"generated":{"line":40,"column":22}},{"source":"declaration.es6","name":null,"original":{"line":16,"column":4},"generated":{"line":40,"column":23}},{"source":"declaration.es6","name":null,"original":{"line":16,"column":4},"generated":{"line":40,"column":27}},{"source":"declaration.es6","name":"defaults","original":{"line":16,"column":10},"generated":{"line":40,"column":29}},{"source":"declaration.es6","name":null,"original":{"line":16,"column":4},"generated":{"line":40,"column":37}},{"source":"declaration.es6","name":null,"original":{"line":16,"column":4},"generated":{"line":40,"column":42}},{"source":"declaration.es6","name":null,"original":{"line":16,"column":4},"generated":{"line":40,"column":46}},{"source":"declaration.es6","name":null,"original":{"line":17,"column":4},"generated":{"line":41,"column":0}},{"source":"declaration.es6","name":null,"original":{"line":17,"column":4},"generated":{"line":41,"column":4}},{"source":"declaration.es6","name":null,"original":{"line":17,"column":4},"generated":{"line":41,"column":9}},{"source":"declaration.es6","name":"type","original":{"line":17,"column":9},"generated":{"line":41,"column":10}},{"source":"declaration.es6","name":null,"original":{"line":17,"column":4},"generated":{"line":41,"column":14}},{"source":"declaration.es6","name":null,"original":{"line":17,"column":16},"generated":{"line":41,"column":17}},{"source":"declaration.es6","name":null,"original":{"line":17,"column":4},"generated":{"line":41,"column":23}},{"source":"declaration.es6","name":null,"original":{"line":15,"column":25},"generated":{"line":42,"column":0}},{"source":"declaration.es6","name":null,"original":{"line":15,"column":25},"generated":{"line":42,"column":11}},{"source":"declaration.es6","name":null,"original":{"line":15,"column":25},"generated":{"line":42,"column":16}},{"source":"declaration.es6","name":null,"original":{"line":18,"column":3},"generated":{"line":43,"column":0}},{"source":"declaration.es6","name":null,"original":{"line":20,"column":2},"generated":{"line":44,"column":0}},{"source":"declaration.es6","name":null,"original":{"line":30,"column":2},"generated":{"line":54,"column":0}},{"source":"declaration.es6","name":null,"original":{"line":40,"column":2},"generated":{"line":64,"column":0}},{"source":"declaration.es6","name":null,"original":{"line":51,"column":2},"generated":{"line":75,"column":0}},{"source":"declaration.es6","name":"Node","original":{"line":14,"column":26},"generated":{"line":102,"column":2}},{"source":"declaration.es6","name":"Node","original":{"line":14,"column":26},"generated":{"line":102,"column":7}},{"source":"declaration.es6","name":"Node","original":{"line":14,"column":26},"generated":{"line":102,"column":8}},{"source":"declaration.es6","name":"Declaration","original":{"line":77,"column":15},"generated":{"line":104,"column":15}}],"sources":{"declaration.es6":"import Node from './node'\n\n/**\n * Represents a CSS declaration.\n *\n * @extends Node\n *\n * @example\n * const root = postcss.parse('a { color: black }')\n * const decl = root.first.first\n * decl.type       //=> 'decl'\n * decl.toString() //=> ' color: black'\n */\nclass Declaration extends Node {\n  constructor (defaults) {\n    super(defaults)\n    this.type = 'decl'\n  }\n\n  /**\n   * @memberof Declaration#\n   * @member {string} prop The declaration’s property name.\n   *\n   * @example\n   * const root = postcss.parse('a { color: black }')\n   * const decl = root.first.first\n   * decl.prop //=> 'color'\n   */\n\n  /**\n   * @memberof Declaration#\n   * @member {string} value The declaration’s value.\n   *\n   * @example\n   * const root = postcss.parse('a { color: black }')\n   * const decl = root.first.first\n   * decl.value //=> 'black'\n   */\n\n  /**\n   * @memberof Declaration#\n   * @member {boolean} important `true` if the declaration\n   *                             has an !important annotation.\n   *\n   * @example\n   * const root = postcss.parse('a { color: black !important; color: red }')\n   * root.first.first.important //=> true\n   * root.first.last.important  //=> undefined\n   */\n\n  /**\n   * @memberof Declaration#\n   * @member {object} raws Information to generate byte-to-byte equal\n   *                       node string as it was in the origin input.\n   *\n   * Every parser saves its own properties,\n   * but the default CSS parser uses:\n   *\n   * * `before`: the space symbols before the node. It also stores `*`\n   *   and `_` symbols before the declaration (IE hack).\n   * * `between`: the symbols between the property and value\n   *   for declarations.\n   * * `important`: the content of the important statement,\n   *   if it is not just `!important`.\n   *\n   * PostCSS cleans declaration from comments and extra spaces,\n   * but it stores origin content in raws properties.\n   * As such, if you don’t change a declaration’s value,\n   * PostCSS will use the raw value with comments.\n   *\n   * @example\n   * const root = postcss.parse('a {\\n  color:black\\n}')\n   * root.first.first.raws //=> { before: '\\n  ', between: ':' }\n   */\n}\n\nexport default Declaration\n"},"lineCount":null}},"error":null,"hash":"f6a435d41677ab5af3036350e4d1f517","cacheData":{"env":{}}}