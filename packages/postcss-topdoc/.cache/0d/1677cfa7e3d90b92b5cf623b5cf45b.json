{"id":"nYLM","dependencies":[{"name":"/Users/garthdb/Topdoc/topdoc/packages/postcss-topdoc/package.json","includedInParent":true,"mtime":1558471701883},{"name":"/Users/garthdb/Topdoc/topdoc/packages/postcss-topdoc/node_modules/js-yaml/package.json","includedInParent":true,"mtime":1558461383805},{"name":"./common","loc":{"line":5,"column":28},"parent":"/Users/garthdb/Topdoc/topdoc/packages/postcss-topdoc/node_modules/js-yaml/lib/js-yaml/schema.js","resolved":"/Users/garthdb/Topdoc/topdoc/packages/postcss-topdoc/node_modules/js-yaml/lib/js-yaml/common.js"},{"name":"./exception","loc":{"line":6,"column":28},"parent":"/Users/garthdb/Topdoc/topdoc/packages/postcss-topdoc/node_modules/js-yaml/lib/js-yaml/schema.js","resolved":"/Users/garthdb/Topdoc/topdoc/packages/postcss-topdoc/node_modules/js-yaml/lib/js-yaml/exception.js"},{"name":"./type","loc":{"line":7,"column":28},"parent":"/Users/garthdb/Topdoc/topdoc/packages/postcss-topdoc/node_modules/js-yaml/lib/js-yaml/schema.js","resolved":"/Users/garthdb/Topdoc/topdoc/packages/postcss-topdoc/node_modules/js-yaml/lib/js-yaml/type.js"}],"generated":{"js":"\"use strict\";var i=require(\"./common\"),e=require(\"./exception\"),t=require(\"./type\");function n(i,e,t){var c=[];return i.include.forEach(function(i){t=n(i,e,t)}),i[e].forEach(function(i){t.forEach(function(e,t){e.tag===i.tag&&e.kind===i.kind&&c.push(t)}),t.push(i)}),t.filter(function(i,e){return-1===c.indexOf(e)})}function c(){var i,e,t={scalar:{},sequence:{},mapping:{},fallback:{}};function n(i){t[i.kind][i.tag]=t.fallback[i.tag]=i}for(i=0,e=arguments.length;i<e;i+=1)arguments[i].forEach(n);return t}function o(i){this.include=i.include||[],this.implicit=i.implicit||[],this.explicit=i.explicit||[],this.implicit.forEach(function(i){if(i.loadKind&&\"scalar\"!==i.loadKind)throw new e(\"There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.\")}),this.compiledImplicit=n(this,\"implicit\",[]),this.compiledExplicit=n(this,\"explicit\",[]),this.compiledTypeMap=c(this.compiledImplicit,this.compiledExplicit)}o.DEFAULT=null,o.create=function(){var n,c;switch(arguments.length){case 1:n=o.DEFAULT,c=arguments[0];break;case 2:n=arguments[0],c=arguments[1];break;default:throw new e(\"Wrong number of arguments for Schema.create function\")}if(n=i.toArray(n),c=i.toArray(c),!n.every(function(i){return i instanceof o}))throw new e(\"Specified list of super schemas (or a single Schema object) contains a non-Schema object.\");if(!c.every(function(i){return i instanceof t}))throw new e(\"Specified list of YAML types (or a single Type object) contains a non-Type object.\");return new o({include:n,explicit:c})},module.exports=o;"},"sourceMaps":null,"error":null,"hash":"6cfd77919843d5e02acfc59f078f4b69","cacheData":{"env":{}}}