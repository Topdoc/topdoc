{"id":"../node_modules/postcss/lib/comment.js","dependencies":[{"name":"/Users/garthdb/Topdoc/topdoc/packages/postcss-topdoc/package.json","includedInParent":true,"mtime":1558458643585},{"name":"/Users/garthdb/Topdoc/topdoc/packages/postcss-topdoc/node_modules/postcss/package.json","includedInParent":true,"mtime":1558456105012},{"name":"./node","loc":{"line":6,"column":43},"parent":"/Users/garthdb/Topdoc/topdoc/packages/postcss-topdoc/node_modules/postcss/lib/comment.js","resolved":"/Users/garthdb/Topdoc/topdoc/packages/postcss-topdoc/node_modules/postcss/lib/node.js"}],"generated":{"js":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _node = _interopRequireDefault(require(\"./node\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n/**\n * Represents a comment between declarations or statements (rule and at-rules).\n *\n * Comments inside selectors, at-rule parameters, or declaration values\n * will be stored in the `raws` properties explained above.\n *\n * @extends Node\n */\n\n\nvar Comment =\n/*#__PURE__*/\nfunction (_Node) {\n  _inheritsLoose(Comment, _Node);\n\n  function Comment(defaults) {\n    var _this;\n\n    _this = _Node.call(this, defaults) || this;\n    _this.type = 'comment';\n    return _this;\n  }\n  /**\n   * @memberof Comment#\n   * @member {string} text The comment’s text.\n   */\n\n  /**\n   * @memberof Comment#\n   * @member {object} raws Information to generate byte-to-byte equal\n   *                       node string as it was in the origin input.\n   *\n   * Every parser saves its own properties,\n   * but the default CSS parser uses:\n   *\n   * * `before`: the space symbols before the node.\n   * * `left`: the space symbols between `/*` and the comment’s text.\n   * * `right`: the space symbols between the comment’s text.\n   */\n\n\n  return Comment;\n}(_node.default);\n\nvar _default = Comment;\nexports.default = _default;\nmodule.exports = exports.default;"},"sourceMaps":{"js":{"mappings":[{"source":"comment.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":0}},{"source":"comment.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":4}},{"source":"comment.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":9}},{"source":"comment.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":12}},{"source":"comment.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":34}},{"source":"comment.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":35}},{"source":"comment.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":42}},{"source":"comment.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":43}},{"source":"comment.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":51}},{"source":"comment.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":52}},{"source":"comment.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":53}},{"source":"comment.es6","name":null,"original":{"line":3,"column":0},"generated":{"line":19,"column":0}},{"source":"comment.es6","name":"Comment","original":{"line":11,"column":6},"generated":{"line":29,"column":4}},{"source":"comment.es6","name":null,"original":{"line":12,"column":2},"generated":{"line":34,"column":0}},{"source":"comment.es6","name":null,"original":{"line":12,"column":2},"generated":{"line":34,"column":11}},{"source":"comment.es6","name":null,"original":{"line":12,"column":2},"generated":{"line":34,"column":18}},{"source":"comment.es6","name":"defaults","original":{"line":12,"column":15},"generated":{"line":34,"column":19}},{"source":"comment.es6","name":null,"original":{"line":12,"column":2},"generated":{"line":34,"column":27}},{"source":"comment.es6","name":null,"original":{"line":12,"column":25},"generated":{"line":34,"column":29}},{"source":"comment.es6","name":null,"original":{"line":12,"column":25},"generated":{"line":35,"column":0}},{"source":"comment.es6","name":null,"original":{"line":12,"column":25},"generated":{"line":35,"column":8}},{"source":"comment.es6","name":null,"original":{"line":12,"column":25},"generated":{"line":35,"column":13}},{"source":"comment.es6","name":null,"original":{"line":13,"column":4},"generated":{"line":37,"column":0}},{"source":"comment.es6","name":null,"original":{"line":13,"column":4},"generated":{"line":37,"column":4}},{"source":"comment.es6","name":null,"original":{"line":13,"column":4},"generated":{"line":37,"column":9}},{"source":"comment.es6","name":null,"original":{"line":13,"column":4},"generated":{"line":37,"column":12}},{"source":"comment.es6","name":null,"original":{"line":13,"column":4},"generated":{"line":37,"column":17}},{"source":"comment.es6","name":null,"original":{"line":13,"column":4},"generated":{"line":37,"column":18}},{"source":"comment.es6","name":null,"original":{"line":13,"column":4},"generated":{"line":37,"column":22}},{"source":"comment.es6","name":null,"original":{"line":13,"column":4},"generated":{"line":37,"column":23}},{"source":"comment.es6","name":null,"original":{"line":13,"column":4},"generated":{"line":37,"column":27}},{"source":"comment.es6","name":"defaults","original":{"line":13,"column":10},"generated":{"line":37,"column":29}},{"source":"comment.es6","name":null,"original":{"line":13,"column":4},"generated":{"line":37,"column":37}},{"source":"comment.es6","name":null,"original":{"line":13,"column":4},"generated":{"line":37,"column":42}},{"source":"comment.es6","name":null,"original":{"line":13,"column":4},"generated":{"line":37,"column":46}},{"source":"comment.es6","name":null,"original":{"line":14,"column":4},"generated":{"line":38,"column":0}},{"source":"comment.es6","name":null,"original":{"line":14,"column":4},"generated":{"line":38,"column":4}},{"source":"comment.es6","name":null,"original":{"line":14,"column":4},"generated":{"line":38,"column":9}},{"source":"comment.es6","name":"type","original":{"line":14,"column":9},"generated":{"line":38,"column":10}},{"source":"comment.es6","name":null,"original":{"line":14,"column":4},"generated":{"line":38,"column":14}},{"source":"comment.es6","name":null,"original":{"line":14,"column":16},"generated":{"line":38,"column":17}},{"source":"comment.es6","name":null,"original":{"line":14,"column":4},"generated":{"line":38,"column":26}},{"source":"comment.es6","name":null,"original":{"line":12,"column":25},"generated":{"line":39,"column":0}},{"source":"comment.es6","name":null,"original":{"line":12,"column":25},"generated":{"line":39,"column":11}},{"source":"comment.es6","name":null,"original":{"line":12,"column":25},"generated":{"line":39,"column":16}},{"source":"comment.es6","name":null,"original":{"line":15,"column":3},"generated":{"line":40,"column":0}},{"source":"comment.es6","name":null,"original":{"line":17,"column":2},"generated":{"line":41,"column":0}},{"source":"comment.es6","name":null,"original":{"line":22,"column":2},"generated":{"line":46,"column":0}},{"source":"comment.es6","name":"Node","original":{"line":11,"column":22},"generated":{"line":61,"column":2}},{"source":"comment.es6","name":"Node","original":{"line":11,"column":22},"generated":{"line":61,"column":7}},{"source":"comment.es6","name":"Node","original":{"line":11,"column":22},"generated":{"line":61,"column":8}},{"source":"comment.es6","name":"Comment","original":{"line":36,"column":15},"generated":{"line":63,"column":15}}],"sources":{"comment.es6":"import Node from './node'\n\n/**\n * Represents a comment between declarations or statements (rule and at-rules).\n *\n * Comments inside selectors, at-rule parameters, or declaration values\n * will be stored in the `raws` properties explained above.\n *\n * @extends Node\n */\nclass Comment extends Node {\n  constructor (defaults) {\n    super(defaults)\n    this.type = 'comment'\n  }\n\n  /**\n   * @memberof Comment#\n   * @member {string} text The comment’s text.\n   */\n\n  /**\n   * @memberof Comment#\n   * @member {object} raws Information to generate byte-to-byte equal\n   *                       node string as it was in the origin input.\n   *\n   * Every parser saves its own properties,\n   * but the default CSS parser uses:\n   *\n   * * `before`: the space symbols before the node.\n   * * `left`: the space symbols between `/*` and the comment’s text.\n   * * `right`: the space symbols between the comment’s text.\n   */\n}\n\nexport default Comment\n"},"lineCount":null}},"error":null,"hash":"b33d7afc134402c766bd2f453a66174c","cacheData":{"env":{}}}